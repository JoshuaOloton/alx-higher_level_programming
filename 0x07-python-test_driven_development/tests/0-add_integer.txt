>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(2,5)
7
>>> add_integer(5)
103
>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(2,3,1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer(2.0,3)
5
>>> add_integer(2.0,3.5)
5
>>> add_integer(2,3.5)
5
>>> add_integer(2, '3')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError('b must be an integer')
TypeError: b must be an integer
>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError('a must be an integer')
TypeError: a must be an integer
>>> add_integer(float('inf'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 10, in add_integer
    return int(a) + int(b)
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('nan'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 10, in add_integer
    return int(a) + int(b)
ValueError: cannot convert float NaN to integer
>>>
