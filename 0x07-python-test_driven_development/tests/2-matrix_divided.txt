>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> print(matrix_divided([[1,2,3],[4,5]], 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 14, in matrix_divided
    raise TypeError('Each row of the matrix must have the same size')
TypeError: Each row of the matrix must have the same size
>>> print(matrix_divided([[1,2,3],[4,5,6]], 3))
[[3.0, 1.5, 1.0], [0.75, 0.6, 0.5]]
>>> print(matrix_divided([[1,2,3],[4,5,6]], '3'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 9, in matrix_divided
    raise TypeError('div must be a number')
TypeError: div must be a number
>>> print(matrix_divided([[1,2,3],[4,5,6]], [3]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 9, in matrix_divided
    raise TypeError('div must be a number')
TypeError: div must be a number
>>> print(matrix_divided([[1,2,3],[4,5,6]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> print(matrix_divided([[1,2,3],[4,5,6]], 3, 1))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() takes 2 positional arguments but 3 were given
>>> print(matrix_divided([[1,2,3],[4,5,6.0]], 3))
[[3.0, 1.5, 1.0], [0.75, 0.6, 0.5]]
